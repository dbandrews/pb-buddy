name: Scrape
concurrency: ${{ github.workflow }}

on:
 schedule:
   - cron: "23 */4 * * 1-6"
 workflow_dispatch:
    inputs:
      num_jobs:
        description: "How many cores to use in building link list"
        required: true
        default: '4'
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  scrape-latest:
    runs-on: self-hosted2
    timeout-minutes: 1000
    steps:
      - name: Setup repo
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install package
        run : |
          python3 -m pip install --upgrade pip
          python3 -m pip install poetry
          python3 -m poetry install
      - name: Set env vars
        run: |
          echo "DATE=$(python -c 'import datetime as dt; print((dt.datetime.now()))')" >> $GITHUB_ENV
      - name: Log env
        run: env
      - name: Run Scraper
        run: python3 -m poetry run python scripts/scrape_base.py --full_refresh=False --num_jobs=${{github.event.inputs.num_jobs}}
        env: 
          COSMOS_CONN_STR : ${{secrets.COSMOS_CONN_STR}}
  email-alerts:
      runs-on: self-hosted2
      timeout-minutes: 1000
      needs: scrape-latest
      steps:
        - name: Setup repo
          uses: actions/checkout@v2
        - name: Set up Python 3.9
          uses: actions/setup-python@v2
          with:
            python-version: 3.9
        - name: Install package
          run : |
            pip install poetry
            poetry install
        - name: Set env vars
          run: |
            echo "DATE=$(python -c 'import datetime as dt; print((dt.datetime.now()))')" >> $GITHUB_ENV
        - name: Log env
          run: env
        - name: Email alerts
          run: python3 -m poetry run python scripts/email_alerts.py
          env: 
            TWILIO_USER: ${{secrets.TWILIO_USER}}
            TWILIO_PASS: ${{secrets.TWILIO_PASS}}
            HOTMAIL_ADDRESS: ${{secrets.HOTMAIL_ADDRESS}}
            COSMOS_CONN_STR : ${{secrets.COSMOS_CONN_STR}}
        - name: Commit files
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"        
            git add alerts/
            git commit -m "Add data for $DATE"
        - name: Push changes
          uses: ad-m/github-push-action@master
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            branch: ${{ github.ref }}

